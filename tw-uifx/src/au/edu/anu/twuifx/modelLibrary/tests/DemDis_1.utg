treegraph // saved by OmugiGraphExporter on Mon Apr 12 13:02:25 AEST 2021

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
// TREE
3worlds DemDis_1
	authors = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]""))
	built-by = java.lang.String(ian (13 Apr 2021))
	contacts = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]""))
	precis = java.lang.String(Preliminary testing of landscape animal model with local mating and square cookiecutter disturbance)
	publication = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]""))
	version = java.lang.String()
	predefined *categories*
		categorySet *organisation*
			category *assemblage*
			category *atomic*
		record AVEphemeral
			field birthDate
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field age
				interval = fr.ens.biologie.generic.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record AVPopulation
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(AVPopulation)
			field count
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nRemoved
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nAdded
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
		relationType *returnsTo*
			lifespan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
		categorySet *systemElements*
			category *group*
			category *life cycle*
			category *relation*
			category *component*
			category *arena*
		relationType *parentTo*
			lifespan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
		categorySet *lifespan*
			category *ephemeral*
			category *permanent*
	dataDefinition dDef
		record animalDrivers
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(animalDrivers)
			field y
				description = java.lang.String(y loc of individual)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field x
				description = java.lang.String(x loc of individual)
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
		record gDecs
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(gDecs)
			table N
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String(population totals in each grid cell)
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				units = java.lang.String(count)
		record distConsts
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(distConsts)
			field landscapeWidth
				description = java.lang.String(width of fire pattern landscape)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field landscapeHeight
				description = java.lang.String(height of fire pattern landscape)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field burnArea
				description = java.lang.String(area of individual fire footprint)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m^2)
			field ifi
				description = java.lang.String(mean inter-fire interval)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(y)
			field simDuration
				description = java.lang.String(number of years to recycle fire patterns)
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Long)
				units = java.lang.String(y)
		record animalConsts
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(animalConsts)
			field isFemale
				description = java.lang.String(true if individual is female)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
		dimensioner ydim
			size = java.lang.Integer(100)
		record animalDecs
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(animalDecs)
			field isBurnt
				description = java.lang.String(true if burnt this year)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
			field isPregnant
				description = java.lang.String(true if pregnant this year)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
		dimensioner xdim
			size = java.lang.Integer(100)
		record gConsts
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(gConsts)
			field meanDispersalDistance
				description = java.lang.String(Mean of exponential function)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(m)
			field deathRate
				description = java.lang.String(annual probability of death for an individual)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,1.0[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field birthRate
				description = java.lang.String(number born to each female per year)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(1.0E-6)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(count)
			table K
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				description = java.lang.String(Carrying capacity in each grid cell)
				range = au.edu.anu.rscs.aot.util.IntegerRange(MIN_INTEGER..*)
				units = java.lang.String(count)
	system sys1
		constantClass = java.lang.String(code.sys1.generated.GConsts)
		decoratorClass = java.lang.String(code.sys1.generated.GDecs)
		dynamics sim1
			stoppingCondition stCd1
				endTime = fr.cnrs.iees.twcore.constants.DateTimeType(1000)
				subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.stop.SimpleStoppingCondition)
			timeline tmLn1
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(YEAR)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(MONO_UNIT)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(YEAR)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timer clock1
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(YEAR)
					process p7FireMortality
						function FireMortality
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(DeleteDecision)
							userClassName = java.lang.String(code.sys1.generated.FireMortality)
							snippet snptFireMort
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([13]"		if (isBurnt) {","			int nx = N.size(0);","			int ny = N.size(1);","			int idxx = (int) (x / nx);","			int idxy = (int) (y / ny);","			// We need to know the space boundaries!","			if (idxx >= 0 && idxx < nx && idxy >= 0 && idxy < ny) {","				int n = N.getByInt(idxx, idxy);","				n = Math.max(0, n - 1);","				N.setByInt(n, idxx, idxy);","			}","		}","		return isBurnt;"))
					process p6DistEffect
						function DistEffect
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeOtherState)
							userClassName = java.lang.String(code.sys1.generated.DistEffect)
							snippet snptDistEffect
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([4]"		// String methodName = new Object()","		// {}.getClass().getEnclosingMethod().getName();","		// System.out.println(t+methodName);","		otherDec.isBurnt = true;"))
					process p3Rreproduce
						function NBirths
							relateToProduct = java.lang.Boolean(false)
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(CreateOtherDecision)
							userClassName = java.lang.String(code.sys1.generated.NBirths)
							function Birth
								type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetOtherInitialState)
								userClassName = java.lang.String(code.sys1.generated.Birth)
								snippet snptBirth
									javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([22]"		// String methodName = new Object()","		// {}.getClass().getEnclosingMethod().getName();","		// System.out.println(methodName);","		// sex ratio 1:1","		otherCnt.isFemale = random.nextBoolean();","		// -ve exponential dispersal","		double distance = -meanDispersalDistance * Math.log(1 - random.nextDouble());","		double direction = random.nextDouble() * 6.28318530717959;","		double dx = distance * Math.cos(direction);","		double dy = distance * Math.sin(direction);","		otherDrv.x = x + dx;","		otherDrv.y = y + dy;","		// inc N for grid location","		int nx = N.size(0);","		int ny = N.size(1);","		int idxx = (int) (otherDrv.x / nx);","		int idxy = (int) (otherDrv.y / ny);","		// What can you do?! We need a space transformation (adaptor space to table)","		if (idxx >= 0 && idxx < nx && idxy >= 0 && idxy < ny) {","			int n = N.getByInt(idxx, idxy);","			N.setByInt(n + 1, idxx, idxy);","		}"))
							snippet snptNBirths
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([20]"//		String methodName = new Object() {}.getClass().getEnclosingMethod().getName();","//		System.out.println(t+methodName);","		double result = 0.0;","		if (isFemale && isPregnant && age > 0) {","			result = birthRate;","			// Prevent births if above carrying capacity","			int nx = N.size(0);","			int ny = N.size(1);","			int idxx = (int) (x / nx);","			int idxy = (int) (y / ny);","			// We miss counting outside these bounds. We must have some way to know about","			// space borders","			if (idxx >= 0 && idxx < nx && idxy >= 0 && idxy < ny) {","				int k = K.getByInt(idxx, idxy);","				int n = N.getByInt(idxx, idxy);","				if (n >= k)","					result = 0.0;","			}","		}","		return result;"))
					process p1Courting
						function FindMate
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(RelateToDecision)
							userClassName = java.lang.String(code.sys1.generated.FindMate)
							snippet snptFindMate
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([3]"		// If we knew the age we could prevent/check for juvenile pairing!","		boolean result = (!isFemale && other_isFemale);","		return result;"))
					process p4Mortality
						function Death
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(DeleteDecision)
							userClassName = java.lang.String(code.sys1.generated.Death)
							snippet snptDeath
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([18]"		boolean die = false;","		if (age > 0) {","			die = decider.decide(deathRate);","			if (die) {","				// decrement counter","				int nx = N.size(0);","				int ny = N.size(1);","				int idxx = (int) (x / nx);","				int idxy = (int) (y / ny);","				// We need to know the space boundaries!","				if (idxx >= 0 && idxx < nx && idxy >= 0 && idxy < ny) {","					int n = N.getByInt(idxx, idxy);","					n = Math.max(0, n - 1);","					N.setByInt(n, idxx, idxy);","				}","			}","		}","		return die;"))
					process p5DistOcc
						function DistOcc
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(RelateToDecision)
							userClassName = java.lang.String(code.sys1.generated.DistOcc)
							snippet snptDistOcc
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([7]"//		 Select the yearly fires.","		String methodName = new Object() {","		}.getClass().getEnclosingMethod().getName();","		System.out.println(t + methodName);","//		return SquarePatterns.canBurn((int) t, other_x, other_y);","		return random.nextDouble() > 0.9;","//		 return false;"))
					process p8Track
						dataTracker globalTracker
							sampleSize = java.lang.String()
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
					process p2Mate
						function Conceive
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeOtherState)
							userClassName = java.lang.String(code.sys1.generated.Conceive)
							snippet snptConceive
								javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([4]"		// We can't check the age here so we risk inappropriate behaviour!","		if (!isFemale) {","			otherDec.isPregnant = true;","		}"))
		structure struc1
			relationType mateRelation
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(ephemeral)
			space space1
				borderType = fr.cnrs.iees.twcore.constants.BorderListType(([4]"wrap","wrap","wrap","wrap"))
				precision = java.lang.Double(0.1)
				type = fr.cnrs.iees.twcore.constants.SpaceType(continuousFlatSurface)
				units = java.lang.String(m)
				x-limits = fr.ens.biologie.generic.utils.Interval(]0.0,1000.0[)
				y-limits = fr.ens.biologie.generic.utils.Interval(]0.0,1000.0[)
			componentType distType
				constantClass = java.lang.String(code.sys1.generated.DistConsts)
				component distubance
				initFunction InitDist
					type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
					userClassName = java.lang.String(code.sys1.generated.InitDist)
					snippet snptInitDist
						javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([13]"		// String methodName = new Object()","		// {}.getClass().getEnclosingMethod().getName();","		// System.out.println(methodName);","		// Add the Map object below and uncomment relevant code for Q&D testing","		// public static final Map<Integer, List<Rectangle2D>> fires = new HashMap<>();","		focalCnt.ifi = 50;","		focalCnt.simDuration = 1000;","		focalCnt.landscapeHeight = 1000.0;","		focalCnt.landscapeWidth = 1000.0;","		focalCnt.burnArea = 100.0 * 100.0;","		// pre-calculate fire patterns","//		SquarePatterns.createSquarePatterns(random, focalCnt.burnArea, focalCnt.simDuration, focalCnt.landscapeHeight,","//				focalCnt.landscapeWidth, focalCnt.ifi);"))
			categorySet World
				category distCat
					constantClass = java.lang.String(DistCat_Cnt)
					decoratorClass = java.lang.Object(null)
					driverClass = java.lang.Object(null)
				category animalCat
					constantClass = java.lang.String(AnimalCat_Cnt)
					decoratorClass = java.lang.String(AnimalCat_Dec)
					driverClass = java.lang.String(AnimalCat_Drv)
			componentType animalType
				constantClass = java.lang.String(code.sys1.generated.AnimalConsts)
				decoratorClass = java.lang.String(code.sys1.generated.AnimalDecs)
				driverClass = java.lang.String(code.sys1.generated.AnimalDrivers)
				component animal
					nInstances = java.lang.Integer(1000)
				initFunction AnimalInit
					type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
					userClassName = java.lang.String(code.sys1.generated.AnimalInit)
					snippet snptAnimalInit
						javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([15]"		// String methodName = new Object()","		// {}.getClass().getEnclosingMethod().getName();","		// System.out.println(methodName);","		// random bath distribution","		// We don't know the box limits here!","		focalDrv.x = random.nextDouble() * 1000;","		focalDrv.y = random.nextDouble() * 1000;","		// 1:1 sex ratio","		focalCnt.isFemale = random.nextBoolean();","		/**","		 * We would like to set the initial age here! The auto var 'age' is not the age","		 * but the instance age which is not the same thing.","		 * ","		 * So we need to ignore the auto var and use our own.","		 */"))
			relationType distEffAnimal
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
		initFunction GlobalInit
			type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
			userClassName = java.lang.String(code.sys1.generated.GlobalInit)
			snippet snptGlobalInit
				javaCode = au.edu.anu.rscs.aot.collections.tables.StringTable(([5]"		// we would like a list of all *relevant* space info","		focalCnt.deathRate = 1.0;","		focalCnt.birthRate = 3.0;","		focalCnt.meanDispersalDistance = 100.0;","		focalCnt.K.fillWith(10);"))
	experiment expt
		nReplicates = java.lang.Integer(1)
		design dsgn
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(singleRun)
	userInterface gui
		top top
			widget ctrl
				order = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.ControlWidget2)
		tab tab1
			orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(horizontal)
			widget srs
				nSenders = java.lang.Integer(1)
				order = java.lang.Integer(1)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.TimeSeriesWidget1)
			widget landscape
				order = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SpaceWidget1)

// CROSS-LINKS
[relationType:distEffAnimal] toCategory to4 [category:animalCat]
[relationType:distEffAnimal] fromCategory from2 [category:distCat]
[componentType:distType] belongsTo bt11 [category:*atomic*]
[componentType:distType] belongsTo bt10 [category:*permanent*]
[componentType:distType] belongsTo bt9 [category:*component*]
[componentType:distType] belongsTo bt8 [category:distCat]
[relationType:*returnsTo*] fromCategory frm2 [category:*component*]
[relationType:*returnsTo*] toCategory to2 [category:*component*]
[system:sys1] belongsTo bt3 [category:*permanent*]
[system:sys1] belongsTo bt2 [category:*arena*]
[system:sys1] belongsTo bt1 [category:*assemblage*]
[relationType:mateRelation] toCategory to3 [category:animalCat]
[relationType:mateRelation] fromCategory from1 [category:animalCat]
[widget:ctrl] trackTime trks5 [dynamics:sim1]
[table:K] sizedBy szx1 [dimensioner:xdim]
	rank = java.lang.Integer(0)
[table:K] sizedBy szy1 [dimensioner:ydim]
	rank = java.lang.Integer(1)
[table:N] sizedBy szx2 [dimensioner:xdim]
	rank = java.lang.Integer(0)
[table:N] sizedBy szy2 [dimensioner:ydim]
	rank = java.lang.Integer(1)
[category:*ephemeral*] autoVar auto1 [record:AVEphemeral]
[dataTracker:globalTracker] trackField trks4 [field:count]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"null"))
[dataTracker:globalTracker] trackComponent trks3 [system:sys1]
[relationType:*parentTo*] fromCategory frm1 [category:*component*]
[relationType:*parentTo*] toCategory to1 [category:*component*]
[process:p4Mortality] appliesTo aplyTo5 [category:animalCat]
[process:p4Mortality] appliesTo aplyTo8 [category:*ephemeral*]
[process:p4Mortality] dependsOn depsOn1 [process:p3Rreproduce]
[process:p4Mortality] inSpace in2 [space:space1]
	searchRadius = java.lang.Double(1.0)
[componentType:animalType] belongsTo bt7 [category:animalCat]
[componentType:animalType] belongsTo bt6 [category:*atomic*]
[componentType:animalType] belongsTo bt5 [category:*ephemeral*]
[componentType:animalType] belongsTo bt4 [category:*component*]
[process:p5DistOcc] appliesTo aplyTo7 [relationType:distEffAnimal]
[process:p5DistOcc] dependsOn depsOn4 [process:p4Mortality]
[category:*arena*] constants cnsts1 [record:gConsts]
[category:*arena*] decorators decs2 [record:gDecs]
[process:p1Courting] appliesTo aplyTo1 [relationType:mateRelation]
[process:p1Courting] inSpace in1 [space:space1]
	searchRadius = java.lang.Double(50.0)
[process:p8Track] appliesTo aplyTo3 [category:*assemblage*]
[process:p8Track] dependsOn depsOn5 [process:p7FireMortality]
[space:space1] coordinate xcoord [field:x]
	rank = java.lang.Integer(0)
[space:space1] coordinate ycoord [field:y]
	rank = java.lang.Integer(1)
[process:p3Rreproduce] inSpace in3 [space:space1]
	searchRadius = java.lang.Double(1.0)
[process:p3Rreproduce] appliesTo aplyTo6 [category:*ephemeral*]
[process:p3Rreproduce] dependsOn after2 [process:p2Mate]
[process:p3Rreproduce] appliesTo aplyTo4 [category:animalCat]
[category:animalCat] constants cnsts2 [record:animalConsts]
[category:animalCat] decorators decs1 [record:animalDecs]
[category:animalCat] drivers drvs2 [record:animalDrivers]
[process:p6DistEffect] appliesTo aplyTo9 [relationType:distEffAnimal]
[process:p6DistEffect] inSpace in5 [space:space1]
	searchRadius = java.lang.Double(20.0)
[process:p6DistEffect] dependsOn depsOn2 [process:p5DistOcc]
[process:p7FireMortality] appliesTo aplyTo11 [category:*ephemeral*]
[process:p7FireMortality] appliesTo aplyTo10 [category:animalCat]
[process:p7FireMortality] dependsOn depsOn3 [process:p6DistEffect]
[category:*assemblage*] autoVar auto [record:AVPopulation]
[process:p2Mate] inSpace in4 [space:space1]
	searchRadius = java.lang.Double(1.0)
[process:p2Mate] appliesTo aplyTo2 [relationType:mateRelation]
[process:p2Mate] dependsOn after1 [process:p1Courting]
[widget:srs] trackSeries trks2 [dataTracker:globalTracker]
[category:distCat] constants cnsts3 [record:distConsts]
[widget:landscape] trackSpace trks1 [space:space1]