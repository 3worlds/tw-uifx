treegraph // saved by OmugiGraphExporter on Wed May 13 06:57:12 AEST 2020

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)

// CODE snippet for method LotkaVolterra.init(...)
//		// initialise with random parameters
//		for (int i=0; i<r.size(0); i++) {
//			focalLtc.r.setByInt(random.nextDouble(),i);
//			focalLtc.K.setByInt(0.2+random.nextDouble(),i);
//			for (int j=0; j<alpha.size(1); j++) {
//				if (i==j)
//					focalLtc.alpha.setByInt(1.0,i,j);
//				else
//					focalLtc.alpha.setByInt(random.nextDouble(),i,j);
//			}
//		}

// CODE snippet for method LotkaVolterra.growth(...)
//		double[] dxdt = new double[x.size(0)];
//		for (int i=0; i<x.size(0); i++) {
//			double sum = 0;
//			for (int j=0; j<alpha.size(1); j++)
//				sum += alpha.getByInt(i,j) * x.getByInt(j);
//			dxdt[i] = r.getByInt(i) * x.getByInt(i) * (1-sum/K.getByInt(i));
//		}
//		for (int i=0; i<dxdt.length; i++)
//			focalDrv.x.setByInt(x.getByInt(i)+dxdt[i]*dt, i);

// TREE
3worlds LotkaVolterra1
	authors = au.edu.anu.rscs.aot.collections.tables.StringTable(( [2]"Jacques Gignoux","Ian D. Davies"))
	built-by = java.lang.String()
	contacts = au.edu.anu.rscs.aot.collections.tables.StringTable(([2]"jacques.gignoux@upmc.fr","Ian.Davies@anu.edu.au"))
	precis = java.lang.String(The Lotka-Volterra competition model for n species. Illustrates the use of Tables.)
	publication = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]"https:/en.wikipedia.org/wiki/Competitive_Lotka%E2%80%93Volterra_equations"))
	version = java.lang.String(demo)
	predefined *categories*
		record AVEphemeral
			field birthDate
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field age
				interval = fr.ens.biologie.generic.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record AVPopulation
			field count
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nAdded
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nRemoved
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
		categorySet *composition*
			category *population*
			category *individual*
		categorySet *systemElements*
			category *life cycle*
			category *group*
			category *relation*
			category *component*
			category *space*
			category *arena*
		categorySet *lifespan*
			category *ephemeral*
			category *permanent*
	dataDefinition dDef
		record par
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(par)
			table r
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				description = java.lang.String(species growth rates)
				interval = fr.ens.biologie.generic.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				units = java.lang.String()
			table alpha
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				description = java.lang.String(species competition coefficients)
				interval = fr.ens.biologie.generic.utils.Interval([0.0,1.0])
				precision = java.lang.Double(0.0)
				units = java.lang.String()
			table K
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				description = java.lang.String(species carrying capacities)
				interval = fr.ens.biologie.generic.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				units = java.lang.String()
		dimensioner nbsp
			size = java.lang.Integer(4)
		record var
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(var)
			table x
				dataElementType = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				description = java.lang.String(species population sizes)
				interval = fr.ens.biologie.generic.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				units = java.lang.String()
	system sys
		constantClass = java.lang.String(code.sys.Par)
		driverClass = java.lang.String(code.sys.Var)
		initFunction Init
			type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(SetInitialState)
			userClassName = java.lang.String(code.sys.Init)
		variableValues initx
			x = au.edu.anu.rscs.aot.collections.tables.DoubleTable(([4]0.2,0.2,0.2,0.2))
		dynamics sim
			stoppingCondition stCnd
				endTime = fr.cnrs.iees.twcore.constants.DateTimeType(100)
				subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.stop.SimpleStoppingCondition)
			timeLine timeLine
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(ARBITRARY)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timer clock
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
					process p
						function Growth
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys.Growth)
						dataTracker trkr
							sampleSize = java.lang.String()
							samplingMode = fr.cnrs.iees.twcore.constants.SamplingMode(RANDOM)
							statistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
							tableStatistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
		structure comm
	experiment expt
		timePeriod tp
			end = fr.cnrs.iees.twcore.constants.DateTimeType(0)
			start = fr.cnrs.iees.twcore.constants.DateTimeType(0)
		design dsgn
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(singleRun)
	userInterface gui
		top top
			widget ctrl
				order = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleControlWidget1)
		tab tab
			orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(horizontal)
			widget tblx
				order = java.lang.Integer(0)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleDM0Widget)
			widget srsx
				order = java.lang.Integer(1)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget)

// CROSS-LINKS
[table:K] sizedBy szBy2 [dimensioner:nbsp]
	rank = java.lang.Integer(0)
[system:sys] belongsTo blgstqn [category:*arena*]
[widget:tblx] trackSeries trks3 [dataTracker:trkr]
[dataTracker:trkr] trackComponent trks2 [system:sys]
[dataTracker:trkr] trackTable trks1 [table:x]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"[0:3]"))
[table:alpha] sizedBy dim2 [dimensioner:nbsp]
	rank = java.lang.Integer(1)
[table:alpha] sizedBy dim1 [dimensioner:nbsp]
	rank = java.lang.Integer(0)
[experiment:expt] baseLine bsln [system:sys]
[category:*arena*] drivers drvs [record:var]
[category:*arena*] lifetimeConstants ltcs [record:par]
[process:p] appliesTo aplyTo [category:*arena*]
[table:r] sizedBy szBy1 [dimensioner:nbsp]
	rank = java.lang.Integer(0)
[widget:srsx] trackSeries trks4 [dataTracker:trkr]
[table:x] sizedBy szBy [dimensioner:nbsp]
	rank = java.lang.Integer(0)
[category:*ephemeral*] autoVar auto1 [record:AVEphemeral]
[category:*population*] autoVar auto [record:AVPopulation]