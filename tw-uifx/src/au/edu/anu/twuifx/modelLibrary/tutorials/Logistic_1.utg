treegraph // saved by OmugiGraphExporter on Wed May 13 06:04:06 AEST 2020

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)

// CODE snippet for method Logistic.chaos(...)
//		focalDrv.x = r*x*(1-x);

// TREE
3worlds Logistic_1
	authors = au.edu.anu.rscs.aot.collections.tables.StringTable(([2]"Jacques Gignoux","Ian D. Davies"))
	built-by = java.lang.String()
	contacts = au.edu.anu.rscs.aot.collections.tables.StringTable(([2]"jacques.gignoux@upmc.fr","Ian.Davies@anu.edu.au"))
	precis = java.lang.String(The discrete logistic model: a minimal configuration file for 3Worlds. First steps with Process, Function, Widgets and DataTrackers)
	publication = au.edu.anu.rscs.aot.collections.tables.StringTable(([2]"https:/en.wikipedia.org/wiki/Logistic_map","https:/en.wikipedia.org/wiki/Chaos_theory"))
	version = java.lang.String(demo)
	predefined *categories*
		record AVEphemeral
			field birthDate
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field age
				interval = fr.ens.biologie.generic.utils.Interval([0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record AVPopulation
			field count
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nAdded
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
			field nRemoved
				range = au.edu.anu.rscs.aot.util.IntegerRange(0..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Integer)
				units = java.lang.String(#)
		categorySet *composition*
			category *population*
			category *individual*
		categorySet *systemElements*
			category *life cycle*
			category *group*
			category *relation*
			category *component*
			category *space*
			category *arena*
		categorySet *lifespan*
			category *ephemeral*
			category *permanent*
	dataDefinition dDef
		record vars
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(vars)
			field x
				description = java.lang.String(population size)
				interval = fr.ens.biologie.generic.utils.Interval([0.0,1.0])
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record pars
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(pars)
			field r
				description = java.lang.String(population growth rate)
				interval = fr.ens.biologie.generic.utils.Interval(]0.0,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
	system sys
		constantClass = java.lang.String(code.sys.Pars)
		driverClass = java.lang.String(code.sys.Vars)
		dynamics sim
			timeLine tmLn
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(ARBITRARY)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timer clock
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
					process p
						dataTracker trkr
							sampleSize = java.lang.String()
							samplingMode = fr.cnrs.iees.twcore.constants.SamplingMode(RANDOM)
							statistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
							tableStatistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
						function Chaos
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.sys.Chaos)
		variableValues initx
			x = java.lang.Double(0.001)
		constantValues initr
			r = java.lang.Double(3.7)
		structure struc
	experiment expt
		timePeriod tp
			end = fr.cnrs.iees.twcore.constants.DateTimeType(0)
			start = fr.cnrs.iees.twcore.constants.DateTimeType(0)
		design dsgn
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(singleRun)
	userInterface gui
		top top
			widget time
				order = java.lang.Integer(1)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleTimeWidget)
			widget ctrl
				order = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleControlWidget1)
		tab tab
			orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(horizontal)
			widget srsx
				order = java.lang.Integer(0)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget)

// CROSS-LINKS
[system:sys] belongsTo blgsto [category:*arena*]
[system:sys] belongsTo blngsTo2 [category:*permanent*]
[system:sys] belongsTo blngsTo1 [category:*individual*]
[widget:time] trackTime trksTmOf [dynamics:sim]
[dataTracker:trkr] trackComponent trks2 [system:sys]
[dataTracker:trkr] trackField trks1 [field:x]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]"null"))
[experiment:expt] baseLine bsln [system:sys]
[process:p] appliesTo aplyTo [category:*arena*]
[widget:srsx] trackSeries trks3 [dataTracker:trkr]
[category:*arena*] drivers drvs [record:vars]
[category:*arena*] lifetimeConstants params [record:pars]
[category:*ephemeral*] autoVar auto1 [record:AVEphemeral]
[category:*population*] autoVar auto [record:AVPopulation]