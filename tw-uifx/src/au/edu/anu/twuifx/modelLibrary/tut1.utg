treegraph // saved by OmugiGraphExporter on Mon Dec 09 11:01:49 AEDT 2019

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
// TREE
3worlds tut1
	experiment exp
		timePeriod duration
			end = fr.cnrs.iees.twcore.constants.DateTimeType(9)
			start = fr.cnrs.iees.twcore.constants.DateTimeType(0)
		design dsgn
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(singleRun)
	system system
		driverClass = java.lang.String(code.system.Vars)
		parameterClass = java.lang.String(code.system.Pars)
		dynamics dyn
			timeLine scale
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(DAY)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(MONO_UNIT)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(DAY)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timeModel clock
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					runAtTimeZero = java.lang.Boolean(false)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(DAY)
					process proc
						function Func
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.system.Func)
						dataTracker tracker
							groupBy = fr.cnrs.iees.twcore.constants.Grouping(NO_GROUPING)
							select = fr.cnrs.iees.twcore.constants.SamplingMode(RANDOM)
							statistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.TimeSeriesTracker)
							tableStatistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
							viewOthers = java.lang.Boolean(false)
			stoppingCondition stop
				endTime = fr.cnrs.iees.twcore.constants.DateTimeType(99)
				subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.stop.SimpleStoppingCondition)
		structure struct
			componentType type
				driverClass = java.lang.String(code.system.Vars)
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
				parameterClass = java.lang.String(code.system.Pars)
			categorySet ctgrySt
				category ctgry
	userInterface gui
		top toolBar
			widget time
				order = java.lang.Integer(1)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleTimeWidget)
			widget ctrl
				order = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleControlWidget)
		tab output
			orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(vertical)
			widget series
				order = java.lang.Integer(0)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget)
			widget table
				order = java.lang.Integer(1)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleDM0Widget)
	dataDefinition dataTypes
		record vars
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(vars)
			field y
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(?)
		record pars
			dynamic = java.lang.Boolean(false)
			generatedClassName = java.lang.String(pars)
			field x
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String(?)

// CROSS-LINKS
[componentType:type] belongsTo belongsTo [category:ctgry]
[dataTracker:tracker] trackField tracks [field:y]
	index = fr.cnrs.iees.twcore.constants.TrackerType(([1]""))
[experiment:exp] baseLine baseline [system:system]
[widget:table] trackSeries tracks3 [dataTracker:tracker]
[process:proc] appliesTo appliesTo [category:ctgry]
[system:system] belongsTo blngsT2 [category:ctgry]
[category:ctgry] drivers hasVars [record:vars]
[category:ctgry] parameters hasPars [record:pars]
[widget:series] trackSeries tracks2 [dataTracker:tracker]
[widget:time] trackTime tracks1 [dynamics:dyn]
