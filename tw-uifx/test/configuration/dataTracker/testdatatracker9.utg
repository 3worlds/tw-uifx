treegraph // saved by OmugiGraphExporter on Wed Jan 22 15:33:36 CET 2020

	edge_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)
	node_factory = java.lang.String(au.edu.anu.twcore.root.TwConfigFactory)

// Test file for space data tracker
//
//===================== Method code snippets ==================

// --------------------- PlantMor.delete(...) ------------------
//	double bm = ((Rcrd1)focal.currentState()).biomass();
//	double a = 1/5.0;
//	double b = a-1;
//	double prob = Math.min(a*bm*bm + b*bm,1.0); 
//	return decide(prob);
//-----------------------------------------------------

// -------------------- PlantRep.nNew(...) ------------
//	double bm = ((Rcrd1)focal.currentState()).biomass();
//	if (bm>3.0)
//		return 0.1*(bm-2);
//	else 
//		return 0;
//-----------------------------------------------------

// -------------------- InitNewPlant.changeOtherState(...) 
//		double parentBm = ((Rcrd1)focal.currentState()).biomass();
//		((Rcrd1)other.nextState()).biomass(Math.min(parentBm/4.0, 2.0));
//-----------------------------------------------------

//---------------------- PlantGrowth.changeState(...)
//		((Rcrd1)focal.nextState()).biomass(((Rcrd1)focal.currentState()).biomass()*1.05);
//-----------------------------------------------------

//---------------------- MicMor.delete(...)
//		return decide(0.2);
//-----------------------------------------------------

//---------------------- MicRep.nNew(...)
//		return 0.41;
//-----------------------------------------------------

//---------------------- InitNewMic.changeState(...)
//		((Rcrd2)focal.nextState()).virulence(rng().nextDouble());
//-----------------------------------------------------

//---------------------- Infection.relate(...)
//	if (((Rcrd1)other.currentState()).biomass()<4)
//		return decide(((Rcrd2)focal.currentState()).virulence());
//	else
//		return false;
//-----------------------------------------------------

//---------------------- Plot12_MicrobeCRelocateFunction.relocate(...) AND 
//-----------------------Plot12_PlantCRelocateFunction.relocate(...) ------------
//	double[] res = new double[2];
//	double xmin = limits.lowerBound(0);
//	double xmax = limits.upperBound(0);
//	double ymin = limits.lowerBound(1);
//	double ymax = limits.upperBound(1);
//	res[0] = xmin + rng().nextDouble()*(xmax-xmin);
//	res[1] = ymin + rng().nextDouble()*(ymax-ymin);
//	return res;
//-----------------------------------------------------

//=========================================================

// TREE
3worlds testdatatracker9
	authors = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]""))
	contacts = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]""))
	publication = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]""))
	version = java.lang.String()
	built-by = java.lang.String("")
	precis =  java.lang.String("")
	dataDefinition dtDef
		record rcrd2
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(rcrd2)
			field virulence
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
		record rcrd1
			dynamic = java.lang.Boolean(true)
			generatedClassName = java.lang.String(rcrd1)
			field biomass
				interval = fr.ens.biologie.generic.utils.Interval(]-∞,+∞[)
				precision = java.lang.Double(0.0)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Double)
				units = java.lang.String()
			field infected
				range = au.edu.anu.rscs.aot.util.IntegerRange(MIN_INTEGER..*)
				type = fr.cnrs.iees.twcore.constants.DataElementType(Boolean)
	experiment exp
		design dsgn1
			type = fr.cnrs.iees.twcore.constants.ExperimentDesignType(singleRun)
		timePeriod tmPrd1
			end = fr.cnrs.iees.twcore.constants.DateTimeType(0)
			start = fr.cnrs.iees.twcore.constants.DateTimeType(0)
	system system
		dynamics dyn
			timeLine tmLn1
				longestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				scale = fr.cnrs.iees.twcore.constants.TimeScaleType(ARBITRARY)
				shortestTimeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
				timeOrigin = fr.cnrs.iees.twcore.constants.DateTimeType(0)
				timer tmMdl1
					dt = java.lang.Long(1)
					nTimeUnits = java.lang.Integer(1)
					subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.timer.ClockTimer)
					timeUnit = fr.cnrs.iees.twcore.constants.TimeUnits(UNSPECIFIED)
					process infest
						function Infection
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(RelateToDecision)
							userClassName = java.lang.String(code.system.Infection)
					process microbeLife
						function MicRep
							relateToProduct = java.lang.Boolean(false)
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(CreateOtherDecision)
							userClassName = java.lang.String(code.system.MicRep)
							function InitNewMic
								type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
								userClassName = java.lang.String(code.system.InitNewMic)
						function MicMor
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(DeleteDecision)
							userClassName = java.lang.String(code.system.MicMor)
						dataTracker micTracker
							sampleSize = java.lang.String()
							samplingMode = fr.cnrs.iees.twcore.constants.SamplingMode(RANDOM)
							statistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
							tableStatistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
					process plantLife
						function PlantRep
							relateToProduct = java.lang.Boolean(false)
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(CreateOtherDecision)
							userClassName = java.lang.String(code.system.PlantRep)
							function InitNewPlant
								type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeOtherState)
								userClassName = java.lang.String(code.system.InitNewPlant)
						function PlantGrowth
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(ChangeState)
							userClassName = java.lang.String(code.system.PlantGrowth)
						function PlantMor
							type = fr.cnrs.iees.twcore.constants.TwFunctionTypes(DeleteDecision)
							userClassName = java.lang.String(code.system.PlantMor)
						dataTracker plantTracker
							sampleSize = java.lang.String()
							samplingMode = fr.cnrs.iees.twcore.constants.SamplingMode(RANDOM)
							statistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
							subclass = java.lang.String(au.edu.anu.twcore.ecosystem.runtime.tracking.DataTracker0D)
							tableStatistics = fr.cnrs.iees.twcore.constants.StatisticalAggregatesSet({MEAN})
			initialState state
				group bacteria
					component mic1
						variableValues vvMic
							virulence = java.lang.Double(0.3)
				group grass
					component gr1
						variableValues vvGr
							biomass = java.lang.Double(12.0)
							infected = java.lang.Boolean(false)
		structure struct
			relationType disease
			// ??? what do we need to do here to align with microbeC below??
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
			componentType microbeC
				driverClass = java.lang.String(code.system.Rcrd2)
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
				relocateFunctionName = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]"code.system.Plot12_MicrobeCRelocateFunction"))
			arena arena
				space plot12
					edgeEffects = fr.cnrs.iees.twcore.constants.EdgeEffects(noCorrection)
					type = fr.cnrs.iees.twcore.constants.SpaceType(continuousFlatSurface)
					x-limits = fr.ens.biologie.generic.utils.Interval([0.0,10.0])
					y-limits = fr.ens.biologie.generic.utils.Interval(]5.0,12.0])
			componentType plantC
				driverClass = java.lang.String(code.system.Rcrd1)
				lifeSpan = fr.cnrs.iees.twcore.constants.LifespanType(permanent)
				relocateFunctionName = au.edu.anu.rscs.aot.collections.tables.StringTable(([1]"code.system.Plot12_PlantCRelocateFunction"))
			categorySet ctgrySt1
				category microbe
				category plant
	userInterface gui
		tab tab
			orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(horizontal)
			widget seriesPlant
				order = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.TimeSeriesWidget1)
			container cont
				order = java.lang.Integer(0)
				orientation = fr.cnrs.iees.twcore.constants.UIContainerOrientation(horizontal)
				widget seriesMic
					order = java.lang.Integer(0)
					subclass = java.lang.String(au.edu.anu.twuifx.widgets.TimeSeriesWidget1)
				widget space
					order = java.lang.Integer(0)
					sender = java.lang.Integer(0)
					subclass = java.lang.String(au.edu.anu.twuifx.widgets.SimpleSpaceWidget1)
		top toolBar
			widget time
				order = java.lang.Integer(1)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.ProgressWidget1)
			widget ctrl
				order = java.lang.Integer(0)
				sender = java.lang.Integer(0)
				subclass = java.lang.String(au.edu.anu.twuifx.widgets.ControlWidget1)

// CROSS-LINKS
[group:bacteria] groupOf grpOf1 [componentType:microbeC]
[componentType:plantC] belongsTo blngsT1 [category:plant]
[experiment:exp] baseLine baseline [system:system]
[componentType:microbeC] belongsTo blngsT2 [category:microbe]
[widget:seriesPlant] trackSeries trksSrsOf1 [dataTracker:plantTracker]
[component:gr1] location 1_1 [space:plot12]
	coordinates = au.edu.anu.rscs.aot.collections.tables.DoubleTable(([2]1.1,11.2))
[component:gr1] instanceOf instOf1 [componentType:plantC]
[category:plant] drivers drvrs1 [record:rcrd1]
[widget:space] trackSpace trksSpc [space:plot12]
[widget:seriesMic] trackSeries trksSrsOf [dataTracker:micTracker]
[widget:ctrl] trackTime trksTmOf [dynamics:dyn]
[group:grass] groupOf grpOf [componentType:plantC]
[category:microbe] drivers drvrs2 [record:rcrd2]
[dataTracker:plantTracker] trackPopulation trksPopOf [group:grass]
	variables = fr.cnrs.iees.twcore.constants.PopulationVariablesSet({COUNT,NADDED,NREMOVED})
[process:microbeLife] appliesTo applsT2 [category:microbe]
[process:plantLife] appliesTo applsT3 [category:plant]
[relationType:disease] fromCategory pathogen [category:microbe]
[relationType:disease] toCategory host [category:plant]
[process:infest] inSpace  [space:plot12]
	searchRadius = java.lang.Double(0.2)
[process:infest] appliesTo applsT1 [relationType:disease]
[dataTracker:micTracker] trackPopulation trksPopOf1 [group:bacteria]
	variables = fr.cnrs.iees.twcore.constants.PopulationVariablesSet({COUNT,NADDED,NREMOVED})
[component:mic1] location 1 [space:plot12]
	coordinates = au.edu.anu.rscs.aot.collections.tables.DoubleTable(([2]1.0,11.0))
[component:mic1] instanceOf instOf [componentType:microbeC]
[widget:time] trackTime tracks1 [dynamics:dyn]